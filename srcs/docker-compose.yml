version: '3.8'
name: inception

# Explaning

# Esse docker-compose.yml vai ser usado para orquestrar a execução dos containers
# Ao ser executado, vai rodar o dockerfile de cada um dos serviços
# o path para o dockerfile é o context para o build
# Sendo assim, o dockerfile do MariaDB por exemplo está em requirements/mariadb
# Os args são alguns valores que o dockerfile espera receber como variável

# Caso tenha algum .env na mesma pasta, como é o caso, essas variáveis são convertidas nesses valores,
# mas também seria possível passar esses valores ao rodar o build
# ex: docker-compose up --build --build-arg WORDPRESS_DATABASE=mydb --build-arg ...

# O restart always garante que se por algum motivo a execução do container falhe, ele seja restartado
# Volumes define onde vão ser persistidos os dados do container
# E a Network, em modo Bridge, seria uma rede interna em que os containers poderiam se comunicar dentro do mesmo host.

# Quando você cria uma rede Docker no modo bridge, o Docker cria uma interface de rede virtual dentro do host e conecta todos os contêineres que estão na mesma rede a essa interface.
# Isso permite que os contêineres se comuniquem entre si usando endereços IP internos, enquanto permanecem isolados do restante da rede do host.

# Dentro de cada serviço (mariadb, wordpress e nginx),
# Os volumes estão sendo definidos para especificar onde os dados dos contêineres devem ser armazenados no host.
# Um volume chamado mariadb será montado em /var/lib/mysql dentro do contêiner MariaDB, por exemplo.

# Enquanto na seção volumes, há definições adicionais para os mesmos volumes (mariadb e wordpress).
# Sendo definido na máquina host onde vai haver a persistência desses dados.
# Um volume externo aos containers

# o: bind: Isso indica que estamos utilizando a opção de montagem de bind, 
# que é uma forma de montar um diretório específico do sistema de arquivos do host diretamente no contêiner.

#type: none: Indica que não estamos usando um driver de volume específico. 
# Em vez disso, estamos configurando manualmente a montagem usando o bind.

services:
  mariadb:
    container_name: mariadb
    image: mariadb:1.0
    build: 
      context: requirements/mariadb
      args:
        - WORDPRESS_DATABASE
        - WORDPRESS_USER
        - WORDPRESS_PASSWORD
    restart: always
    networks:
      - inception
    volumes:
      - mariadb:/var/lib/mysql

  wordpress:
    container_name: wordpress
    image: wordpress:1.0
    build:
      context: requirements/wordpress
      args:
        - WORDPRESS_DATABASE
        - WORDPRESS_USER
        - WORDPRESS_PASSWORD
    restart: always
    networks:
      - inception
    volumes:
      - wordpress:/var/www/html
    depends_on:
      - mariadb

  nginx:
    container_name: nginx
    image: nginx:1.0
    build:
      context: requirements/nginx
    restart: always
    ports:
      - 443:443
    networks:
      - inception
    volumes:
      - wordpress:/var/www/html
    depends_on:
      - wordpress

networks:
  inception:
    name: inception
    driver: bridge

volumes:
  mariadb:
    driver_opts:
      o: bind
      type: none
      device: /home/acesar-l/data/mariadb
  wordpress:
    driver_opts:
      o: bind
      type: none
      device: /home/acesar-l/data/wordpress
